{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "HXPUlLg7PHAF"
   },
   "source": [
    "Lab Assignment 5:\n",
    "\n",
    "The purpose of this laboratory is to implement a neural network for a classification task:\n",
    "\n",
    "\n",
    "\n",
    "1.   The network is trained using minibatch stochastic gradient descent.\n",
    "2.   You have images of handwritten digits from the [MNIST dataset](http://yann.lecun.com/exdb/mnist/) and you should train the network to predict the value of the digit for images.\n",
    "\n",
    "Network specification:\n",
    "\n",
    "1.   Input layer - one hidden layer - output layer\n",
    "2.   Activation functions: for hidden layer \"ReLU\" and for output layer \"softmax\"\n",
    "3.   Loss function: categorical cross-entropy\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "s8Mq_ZnWWVzU"
   },
   "outputs": [],
   "source": [
    "def softmax(x):\n",
    "    # TODO\n",
    "\n",
    "def d_softmax(x):\n",
    "    # TODO\n",
    "\n",
    "def relu(x):\n",
    "    # TODO\n",
    "\n",
    "def D_relu(x):\n",
    "    # TODO\n",
    "\n",
    "def loss(predicted, target):\n",
    "    # TODO\n",
    "\n",
    "def d_loss(predicted, target):\n",
    "    # TODO"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "S7FFYLpnf6oT"
   },
   "source": [
    "Your code consists of at least five functions:\n",
    "\n",
    "* Network initialization\n",
    "* Forward pass\n",
    "* Backward pass\n",
    "* Train \n",
    "* Evaluate\n",
    "\n",
    "You are free to add more functions for the sake of having better organization for your code."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "O7VByNZMXsNa"
   },
   "source": [
    "Tune your network by changing hyperparametes of the network:\n",
    "* Number of epochs\n",
    "* Number of neurons in hidden layer\n",
    "* Different learning rates\n",
    "* Different minibatch sizes\n",
    "\n",
    "Also, try the following changes to the network:\n",
    "* Apply different optimziation algorithms: Momentum, Adagrad, RMSprop, and ADAM\n",
    "* Apply L2 regularization techniques to the loss function"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "xcIVzaTuWT5H"
   },
   "source": [
    "Please submit your code with report on the error rate. You can also compare your results with the MNIST performance results exists on the MNIST website.\n",
    "Please also report the effect of different changes you made in the network."
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "Lab_5.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
